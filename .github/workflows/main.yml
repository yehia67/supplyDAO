name: CI

on:
  push:
    branches:
      - main
      - testnet
  pull_request:
    branches:
      - main
      - testnet

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@main

      - name: Use latest version of Node.j
        uses: actions/setup-node@main
        with:
          node-version: "*"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v3
        id: yarn-cache #`steps.yarn-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Run lint
        run: yarn eslint . --ext .js,.jsx,.ts,.tsx

  types:
    name: Check Types
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@main

      - name: Use latest version of Node.j
        uses: actions/setup-node@main
        with:
          node-version: "*"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v3
        id: yarn-cache #`steps.yarn-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: check types
        run: "yarn tsc --noEmit"

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft != true
    steps:
      - name: Check out repository
        uses: actions/checkout@main

      - name: Use latest version of Node.j
        uses: actions/setup-node@main
        with:
          node-version: "*"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v3
        id: yarn-cache #`steps.yarn-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Run Test
        run: CI=true yarn jest --passWithNoTests
